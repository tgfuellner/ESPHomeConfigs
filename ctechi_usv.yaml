esphome:
  name: ctechi-usv
  friendly_name: Ctechi USV

esp8266:
  board: d1_mini

wifi:
  networks:
  - ssid: WLAN
    password: !secret wifi_password

  # Set up a wifi access point using the device name above
  ap:

# In combination with the `ap` this allows the user
# to provision wifi credentials to the device.
captive_portal:

ota:
  platform: esphome
api:
  encryption:
    key: !secret api_encryption_key
logger:

# Script für die 3-minütige Ausschaltsperre
script:
  - id: start_charge_lockout
    # 'restart' sorgt dafür, dass bei erneutem Auslösen der Timer von vorne beginnt.
    mode: restart
    then:
      - switch.turn_off: usv_relay
      - logger.log: "Laden gestoppt. Starte 3-minütige Sperre."
      - delay: 3min
      - logger.log: "3-minütige Sperre beendet. Laden ist wieder erlaubt."


# --- Komponenten ---

# Mit 1.2M Ohm auf den A0 des Wemos D1 Mini. Auf dem Mini ist bereits ein Spannungsteiler!
sensor:
  - platform: adc
    pin: A0
    name: "BatterieSpannung"
    update_interval: 30s
    samples: 5
    filters:
      - multiply: 15.141
    on_value_range:
      - below: 13.1
        then:
          - switch.turn_on: usv_relay
      - above: 13.5
        then:
          - switch.turn_off: usv_relay

# 1. Binäre Sensoren (Deine Eingänge)
binary_sensor:
  # Sensor zum EINSCHALTEN des Relais
  - platform: gpio
    pin:
      # Passe den Pin an deine Schaltung an (z.B. D5)
      number: D5
      # Nutzt den internen Pullup-Widerstand
      mode: INPUT_PULLUP
    name: "i60 LED"
    id: i60_pin
    filters:
      - invert:
    #   # Laden wird durch blinkede LED angezeigt!
    #   - delayed_on: 20s
    #   - delayed_off: 20s
    # # Automation: Wenn der Sensor auf 'true' geht, schalte das Relais EIN.
    # # 'on_press' wird ausgelöst, wenn der Zustand von OFF zu ON wechselt.
    # # Die i60 LED geht aus
    # on_press:
    #   - if:
    #       # Hinzugefügte Bedingung: Nur ausführen, wenn die Sperre nicht aktiv ist.
    #       condition:
    #         not:
    #           script.is_running: start_charge_lockout
    #       then:
    #         - switch.turn_on: usv_relay
    #         - logger.log: "i60 LED ist ausgegangen --> lade"
    #       else:
    #         - logger.log: "Versuch zu laden, aber die 3-Minuten-Sperre ist aktiv. Aktion ignoriert."

  # Sensor zum AUSSCHALTEN des Relais
  - platform: gpio
    pin:
      # Passe den Pin an deine Schaltung an (z.B. D6)
      number: D6
      mode: INPUT_PULLUP
    name: "i80 LED"
    id: i80_pin
    filters:
      - invert:
    #   - delayed_on: 20s
    #   - delayed_off: 20s
    # # Automation: Wenn der Sensor auf 'false' geht, schalte das Relais AUS.
    # # 'on_release' wird ausgelöst, wenn der Zustand von ON zu OFF wechselt.
    # # Die i80 LED geht an
    # on_release:
    #   # Ersetzt den direkten Befehl durch den Aufruf des Scripts
    #   - script.execute: start_charge_lockout

switch:
  - platform: gpio
    # Passe den Pin an deine Schaltung an (z.B. D1)
    pin: D1
    inverted: true
    name: "Charge Relais"
    # ID, um das Relais in den Automationen anzusprechen
    id: usv_relay
